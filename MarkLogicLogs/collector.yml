receivers:
  filelog:
    include:
      - 'logs/*log.txt'
    # start_at: beginning
    include_file_name: false
    include_file_path: true
    operators:
      - id: parse_line
        type: regex_parser
        regex: '^(?P<time>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}(?:\.\d{3})?) (?P<severity>([a-zA-Z]+:?))\s?(?P<message>.*)$'
        severity:
          parse_from: attributes.severity
          preset: default
          overwrite_text: true
          mapping:
            info:
              - 'Info:'
            debug:
              - 'Notice:'
      - id: parse_time_short
        type: time_parser
        parse_from: attributes.time
        layout_type: strptime
        layout: '%Y-%m-%d %H:%M:%S'
        if: attributes.time not contains "."
      - id: parse_time_long
        type: time_parser
        parse_from: attributes.time
        layout_type: strptime
        layout: '%Y-%m-%d %H:%M:%S.%L'
        if: attributes.time contains "."
      - id: log_recombine
        type: recombine
        combine_field: attributes.message
        combine_with: "\n"
        is_first_entry: attributes.message not startsWith "+"
      - type: move
        from: attributes.message
        to: body
      - type: remove
        field: attributes.time
      - type: remove
        field: attributes.severity

processors:
  batch:
    timeout: 1s
    send_batch_size: 10

exporters:
  debug:
    verbosity: detailed
  otlp/logs:
    endpoint: 'api.honeycomb.io:443'
    headers:
      'x-honeycomb-team': 'hcaik_01jmj9hshxppp5hehgx9s7n1q7d1wkays2tgkxndqp1dspmb4gav5s292k'
      'x-honeycomb-dataset': 'MarkLogicLogTest'

service:
  pipelines:
    logs:
      receivers: [filelog]
      processors: [batch]
      exporters: [debug, otlp/logs]

